#! /bin/sh

# This script should find a v4l camera, and start streaming jpg video using mjpg-streamer
# You will need mjpg_streamer installed with the necessary libraries at /usr/lib

FRAMERATE=30
RESOLUTION=320x240
PORT=5002
DEVICE=/dev/video0
WEB_DIR=/var/www/mjpg_streamer
# works on pi/linux
MY_IP=`/sbin/ifconfig | /bin/grep 'inet addr:'| /bin/grep -v '127.0.0.1' | /usr/bin/cut -d: -f2 | /usr/bin/head -1 | /usr/bin/awk {'printf("%s", $1)'}`
# works on osx 
#MY_IP=`/sbin/ifconfig | /usr/bin/grep 'inet '| /usr/bin/grep -v '127.0.0.1' | /usr/bin/cut -d' ' -f2 | /usr/bin/head -1 | /usr/bin/awk {'printf("%s", $1)'}`

HTML_TEMPLATE="
<!DOCTYPE html> <html><body>
<h1>Pi Cam</h1>
Frame Rate (fps): DUMMYFRAMERATE<br>
Resolution: DUMMYRESOLUTION<br>
<img src=\"http://DUMMYIP/?action=stream\" width=\"500\">
</body></html>
"

case "$1" in
  start)
    echo "Starting PiCam"
    # make the directory to host the webserver
    sudo mkdir -p  /var/www/mjpg_streamer/
    # get our ip address, create index.html with streaming video. eth0 will be selected before wlan0
    sudo sh -c "echo '$HTML_TEMPLATE' | \
    awk -v f="$FRAMERATE" -v r="$RESOLUTION" -v p=":$PORT" -v d="$MY_IP" \
    '{sub(/DUMMYRESOLUTION/,r)};{sub(/DUMMYFRAMERATE/,f)};{sub(/DUMMYIP/,d p)}; 1' \
    > $WEB_DIR/index.html"
    # start mjpg-streamer in the background with a v4l device. Assumes the .so files are in /usr/lib/
    sudo bash -c "mjpg_streamer -i \"/usr/lib/input_uvc.so -d $DEVICE  -r $RESOLUTION  -f $FRAMERATE\" -o \"/usr/lib/output_http.so -p $PORT -w $WEB_DIR\" 2>&1 /dev/null &" && echo "Stream is at http://$MY_IP:$PORT/"
    ;;
  stop)
    echo "Stopping PiCam"
    # lets kill all instances of mjpg_streamer
    sudo killall mjpg_streamer 
    #sudo rm -rf /var/www/mjpg_streamer
    ;;
  *)
    echo "Usage: picam {start|stop}"
    exit 1
    ;;
esac

exit 0

